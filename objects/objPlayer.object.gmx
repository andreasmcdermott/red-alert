<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gameover = false;
shootX = 0;
shootY = 0;
shootLen = 1;
image_speed = 0;
canDamage = true;
clip = 128;
blinkTime = 0;
playGunSound = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>701</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playGunSound = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>clip = 128;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canDamage = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_escape))
    room_goto(rmMenu);
        
if(!global.gameover)
{       
    var inst = instance_place(x, y, objWall);
    if(inst != noone)
    {
        if(inst.y &gt; y)
            y--;
        else if(inst.y &lt; y)
        {
            y++;
        }
        
        if(inst.x &gt; x)
        {
            x--;
        }      
        else if(inst.x &lt; x)
        {
            x++;
        }
    }
        
    var dx = 0;
    var dy = 0;
    
    if(keyboard_check(ord('A')) || keyboard_check(vk_left))
    {
        dx -= 2;
    }
    else if(keyboard_check(ord('D')) || keyboard_check(vk_right))
    {
        dx += 2;
    }
    
    if(keyboard_check(ord('W')) || keyboard_check(vk_up))
    {
        dy -= 2;
    }
    else if(keyboard_check(ord('S')) || keyboard_check(vk_down))
    {
        dy += 2;
    }
    
    if(dx != 0 || dy != 0)
    {      
        if(!place_meeting(x + dx, y, objWall))
            x += dx;
        else
        {
            dx = sign(dx);
            if(!place_meeting(x + dx, y, objWall))
                x += dx;
        }
        if(!place_meeting(x, y + dy, objWall))
            y += dy;
        else
        {
            dy = sign(dy);
            if(!place_meeting(x, y + dy, objWall))
                y += dy;
        }
    }
    
    image_angle = point_direction(x, y, mouse_x, mouse_y) - 90;
    
    var vx = mouse_x - x;
    var vy = mouse_y - y;
    var len = sqrt(vx * vx + vy * vy);
    if(len != 0)
    {
        vx = vx / len;
        vy = vy / len;
    }
    
    shootX = vx;
    shootY = vy;
    
    var result = getCollision(x, y, vx, vy, all);
    var shootAt = ds_list_find_value(result, 0);
    if(shootAt != noone)
    {              
        shootLen = point_distance(x, y, ds_list_find_value(result, 1), ds_list_find_value(result, 2)) + 8;
    }
    else
    {
        shootLen = 0;
    }
    
    ds_list_destroy(result);
    
    if(mouse_check_button(mb_left))
    {
        if(clip &gt; 0)
        {
            clip--;
            
            if(clip &lt;= 0)
            {
                alarm[1] = 64;
            }
            
            if(shootAt != noone)
            {                          
                var color = c_ltgray;
                if(shootAt.object_index == objEnemy)
                {
                    if(canDamage)
                    {
                        shootAt.hp -= 10;
                        canDamage = false;
                        alarm[0] = 8;
                    }
                    color = c_maroon;
                }
                else if(shootAt.object_index == objGold)
                {
                    if(canDamage)
                    {
                        shootAt.hp -= 10;
                        canDamage = false;
                        alarm[0] = 8;
                    }
                    color = c_yellow;
                }
                    
                if(playGunSound)
                {
                    audio_play_sound(sndGun, 5, false);
                    playGunSound = false;
                    alarm[2] = 8;
                }
                
                part_particles_create_color(global.particleSystem, x + shootX * shootLen, y + shootY * shootLen, global.partTypeBulletHit, color, 2);
            }
        }
        else
        {
            if(playGunSound)
            {
                audio_play_sound(sndEmpty, 5, false);
                playGunSound = false;
                alarm[2] = 8;
            }
        }
    }
}
else
{
    if(mouse_check_button_pressed(mb_left))
    {
        global.gameover = false;
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(global.gameover)
{
    draw_set_font(font1);
    draw_set_color(c_black);
    draw_set_alpha(0.9);
    draw_rectangle(0, room_height / 2 - 120, room_width, room_height / 2 + 120, false);
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_white);
    draw_text(room_width / 2, room_height / 2 - 105, "Game Over");
    draw_text(room_width / 2, room_height / 2 - 5, "Highscore");
    draw_set_font(font0);
    for(var i = 1; i &lt;= 5; i++)
    {
        draw_set_halign(fa_left);
        draw_text(10, room_height / 2 + 10 + i * 19, string(i) + ".");
        draw_set_halign(fa_center);
        draw_text(room_width / 2, room_height / 2 + 10 + i * 19, highscore_name(i));
        draw_set_halign(fa_right);
        draw_text(room_width - 10, room_height / 2 + 10 + i * 19, string(highscore_value(i)));
    }
    draw_set_halign(fa_center);
    draw_text(room_width / 2, room_height / 2 - 40, "Your score: " + string(score));
    draw_text(room_width / 2, room_height / 2 - 70, "Click to restart");
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
}
else
{
    draw_set_color(c_red);
    draw_circle(mouse_x, mouse_y, 4, true);
    draw_set_color(c_white);
    
    if(global.state == "scramble" &amp;&amp; global.subState == "blink_on")
    {
        draw_set_color(c_red);
        draw_set_alpha(0.075);
        draw_rectangle(0, 0, room_width, room_height, false);
        draw_set_alpha(1);
        draw_set_color(c_white);
    }
    
    if(clip &lt;= 0)
    {
        if(blinkTimer &lt; 0)
        {
            draw_set_color(c_white);
            draw_set_halign(fa_center);
            draw_set_valign(fa_middle);
            draw_text(room_width / 2, room_height / 2, "Reloading..");
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            
            if(blinkTimer &lt; -8)
                blinkTimer = 8;
        }
        
        blinkTimer--;
    }
    else
    {
        blinkTimer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>16777215</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Gold: </string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if(!playGunSound &amp;&amp; clip &gt; 0)
{
    draw_sprite_ext(sprGun, 0, x + shootX * 24, y + shootY * 24, 1, 1, image_angle, c_white, random_range(0, 1));  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toggleMusic();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
