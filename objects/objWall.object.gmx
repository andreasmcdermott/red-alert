<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWall</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 1;
image_speed = 0;
nextX = -1;
nextY = -1;
destroy = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.gameover)
{
    hspeed = 0;
    vspeed = 0;
}
else if((hspeed != 0 || vspeed != 0) &amp;&amp; !global.gameover)
{
    var gold = instance_place(x + hspeed, y + vspeed, objGold);
    if(gold != noone)
    {
        with(gold)
        {
            x += other.hspeed;
            y += other.vspeed;
            
            if(x &lt; 32 || x &gt;= room_width - 32 || y &lt; 32 || y &gt;= room_height - 32)
            {
                hp = 0;
            }
        }
    }

    var enemy = instance_place(x + hspeed, y + vspeed, objEnemy);
    if(enemy != noone)
    {
        with(enemy)
        {
            x += other.hspeed;
            y += other.vspeed;
            
            if(x &lt; 32 || x &gt;= room_width - 32 || y &lt; 32 || y &gt;= room_height - 32)
            {
                hp = 0;
            }
            else
            {
                var wall = instance_place(x, y, objWall);
                if(wall != other.id &amp;&amp; wall != noone)
                {
                    hp = 0;
                }
            }
        }
    }
        
    if(place_meeting(x + hspeed, y + vspeed, objPlayer))
    {
        with(instance_find(objPlayer, 0))
        {
            x += other.hspeed; 
            y += other.vspeed;      
               
            var wall = instance_place(x, y, objWall);
            if(wall != other.id &amp;&amp; wall != noone)
            {
                global.gameover = true;
            }
        }
        
        if(global.gameover &amp;&amp; objPlayer.image_index == 0)
        {
            addHighscore();
            objPlayer.image_index = 1;
            instance_create(objPlayer.x, objPlayer.y, objDead);
            part_particles_create_color(global.particleSystem, objPlayer.x, objPlayer.y, global.partTypeDeath, c_red, 32);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_index == 0 || image_index == 2)
{
    image_index = 0;
    
    if(global.state == "scramble" &amp;&amp; global.subState == "blink_on")
    {
        var dir = global.scrambleDir;
        var myCol = (x - 32) / 32;
        var myRow = (y - 32) / 32;
        if(((dir == 0 || dir == 1) &amp;&amp; myRow == global.scrambleRow) ||
           ((dir == 2 || dir == 3) &amp;&amp; myCol == global.scrambleCol))
        {
            image_index = 2
        }       
    }
    else if(global.state == "scramble" &amp;&amp; global.subState == "moving")
    {
        
    }
}

draw_self();

if(image_index == 2)
{
    draw_set_alpha(0.5);
    draw_sprite(sprRedGlow, 0, x + 16, y + 16);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>0</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>0,32</point>
    <point>0,1.69759663282162E-313</point>
    <point>32,1.47038950663806E-296</point>
  </PhysicsShapePoints>
</object>
